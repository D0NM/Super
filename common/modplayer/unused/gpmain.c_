#include "gpdef.h"
#include "gpstdlib.h"
#include "gpgraphic.h"
//#include "gpmain.h"
//#include "debug.h"
#include "modplayer.h"


GPDRAWSURFACE gpDraw;

extern u8 my_module;


#define RT_ALLOC_SIZE 2500*1024

typedef struct HeapDescriptor tHeapDescriptor;
extern tHeapDescriptor *__rt_embeddedalloc_init(void *, size_t);
static tHeapDescriptor *heapdesc;
static tHeapDescriptor *heapdesc_back;
tHeapDescriptor *__rt_heapdescriptor(void)
{
	return heapdesc;
}

void GpMain(void *arg)
{
	char *rtalloc;
	int i,b;
	char buf[256];
	
	
	
	
	i = GpLcdSurfaceGet(&gpDraw, 0);  	//기존의 surface create							
	GpRectFill(NULL, &gpDraw, 0, 0, gpDraw.buf_w, gpDraw.buf_h, 0xff);	//surface fill color in white
	
	GpSurfaceSet(&gpDraw);	//make gpDraw with primary surface
	
	if ( !(GPC_LCD_ON_BIT & GpLcdStatusGet()) ) GpLcdEnable(); 	//옵션 - default로 lcd가 켜져있으므로..

	//InitDebug();
	
	//rtalloc=(char *)gp_mem_func.malloc(RT_ALLOC_SIZE);                                                            // 이 라인은 코멘트 가능.
	//heapdesc = __rt_embeddedalloc_init(rtalloc, RT_ALLOC_SIZE);

	//__puts("sound_init()\n");

	sound_init();
	
	//__puts("module_load(my_module)\n");
	module_load((u8 *)&my_module);

	//__puts("module_play()\n");
	module_play(1,0);

	GpRectFill(NULL, &gpDraw, 120, 60, 80, 80, 0xe0);	//생성된 surface에 (80*80) 크기의 red box 그리기.
	
	while(1) {
		sprintf(buf,"%d/%d/%d ms\n%d %d %d %d",module_get_info(11),module_get_info(12),module_get_info(1),
			module_get_info(3),module_get_info(4),module_get_info(5),module_get_info(6));
		GpRectFill(NULL, &gpDraw, 200,200,GPC_LCD_WIDTH-200,GPC_LCD_HEIGHT-200, 0xff);
   		GpTextOut(NULL, &gpDraw, 200, 200, buf, 0);

		for (i=0;i<100000;i++) b--;

	}	;
}
